name: Redis Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., 8.2.1)'
        required: true
        type: string
      force_rebuild:
        description: 'Force rebuild even if already exists'
        required: false
        type: boolean
        default: false
      release_type:
        description: 'Release type'
        required: false
        type: choice
        options:
          - public
          - private

jobs:
  redis-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install redis-release package with PIP
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -e .

      - name: Redis release
        shell: bash
        env:
          FORCE_COLOR: 1
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_FOR_WORKFLOW_DISPATCH }}
        run: |

          . venv/bin/activate
          cmd=("redis-release" "release")

          if [ "${{ inputs.force_rebuild }}" = "true" ]; then
            cmd+=("--force-rebuild")
          fi

          if [ -n "${{ inputs.release_type }}" ]; then
            cmd+=("--release-type=${{ inputs.release_type }}")
          fi

          cmd+=("--github-token=$GITHUB_TOKEN")

          cmd+=("${{ inputs.release_tag }}")

          echo "Running command: ${cmd[*]}"
          "${cmd[@]}"